syntax = "proto3";

option go_package = "./user-proto";

//Service for friends
service UserService {
  //Add friends method
  rpc GetUserByLogin (GetUserByLoginIn) returns (GetUserByLoginOut){};
  rpc IsUserExistByUUID (IsUserExistByUUIDIn) returns (IsUserExistByUUIDOut){};
  rpc GetUserInfoByUUID (GetUserInfoByUUIDIn) returns (GetUserInfoByUUIDOut){};
}

// Data in request or getting uuid by login. If User doesnt exist - user will be creating
message GetUserByLoginIn {
  // Email of target user
  string login = 1;
}

// Message for response
message GetUserByLoginOut {
  // UUID of user
  string uuid = 1;
  // Flag for indicate of new user
  bool isNewUser = 2;
}

// Message for request
message IsUserExistByUUIDIn {
  // UUID for target user
  string uuid = 1;
}
// Message for response
message IsUserExistByUUIDOut {
  // Flag of indicate user exist
  bool isExist = 1;
}

// Request data fo getting user info (for initiator page)
message GetUserInfoByUUIDIn {
  // UUID for target user
  string uuid = 1;
}

message Birthday {
  int64 day = 1;
  int64 month = 2;
  int64 year = 3;
}

// Response data for initiator page
message GetUserInfoByUUIDOut {
  string nickname = 1;
  string avatar = 2;
  optional string name = 3;
  optional string surname = 4;
  optional Birthday birthdate = 5;
  optional string phone = 6;
  optional string city = 7;
  optional string telegram = 8;
  optional string git = 9;
  optional string os = 10;
  optional string work = 11;
  optional string university = 12;
  repeated string skills = 13;
  repeated string hobbies = 14;
}